<?php

/**
 * @file
 * Farm Inventory module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_base_field_info().
 */
function farm_inventory_entity_base_field_info(EntityTypeInterface $entity_type) {
  module_load_include('inc', 'farm_inventory', 'farm_inventory.base_fields');
  switch ($entity_type->id()) {

    // Build asset base fields.
    case 'asset':
      return farm_inventory_asset_base_fields();

    // Build quantity base fields.
    case 'quantity':
      return farm_inventory_quantity_base_fields();

    default:
      return [];
  }
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function farm_inventory_inline_entity_form_entity_form_alter(array &$entity_form, FormStateInterface &$form_state) {

  // Check for an IEF quantity form that has the required inventory fields.
  if ($entity_form['#entity_type'] == 'quantity' && isset($entity_form['inventory_adjustment']) && isset($entity_form['inventory_asset'])) {

    // Get the delta value.
    $delta = $entity_form['#ief_row_delta'];

    // Set a name on the form element.
    $adjustment_input_name = 'ief[quantity][' . $delta . '][form][inventory_adjustment]';
    $entity_form['inventory_adjustment']['widget']['#attributes']['name'] = $adjustment_input_name;

    // Set the visible state of the quantity.inventory_asset field.
    // Only display if inventory_adjustment is not _none.
    // @todo The inventory_adjustment field should default to N/A.
    // @todo Validate if an asset is selected, but no adjustment type is set?
    $entity_form['inventory_asset']['#states']['visible'] = [
      ':input[name="' . $adjustment_input_name . '"]' => ['!value' => '_none'],
    ];
  }
}
