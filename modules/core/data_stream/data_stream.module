<?php

/**
 * @file
 * The data stream module.
 */

use Drupal\data_stream\Entity\DataStreamInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_farm_entity_bundle_field_info().
 */
function data_stream_farm_entity_bundle_field_info(EntityTypeInterface $entity_type, string $bundle) {
  $fields = [];

  // Add an asset.data_stream field to sensor and equipment assets.
  if ($entity_type->id() == 'asset' && in_array($bundle, ['sensor', 'equipment'])) {
    $options = [
      'type' => 'entity_reference',
      'label' => t('Data stream'),
      'description' => t('Data streams provided by this asset.'),
      'target_type' => 'data_stream',
      'multiple' => TRUE,
      'weight' => [
        'form' => 55,
        'view' => -5,
      ],
    ];
    $fields['data_stream'] = \Drupal::service('farm_field.factory')->bundleFieldDefinition($options);
  }

  return $fields;
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function data_stream_data_stream_view_alter(array &$build, DataStreamInterface $data_stream, EntityViewDisplayInterface $display) {

  // Bail if there is no entity.
  if (empty($data_stream)) {
    return;
  }

  // Bail if not the listener type.
  if ($data_stream->bundle() != 'listener') {
    return;
  }

  // Add the listener data block view.
  $build['views']['data'] = views_embed_view('data_stream_listener_data', 'block', $data_stream->id());
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function data_stream_data_stream_delete(DataStreamInterface $data_stream) {

  // TODO: Considerations for improved entity reference integrity?
  // Remove any references to this data stream from the asset.data_stream field.
  \Drupal::database()->delete('asset__data_stream')
    ->condition('data_stream_target_id', $data_stream->id())
    ->execute();
}
