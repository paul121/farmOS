<?php

/**
 * @file
 * Contains farm_group.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_entity_base_field_info().
 */
function farm_group_entity_base_field_info(EntityTypeInterface $entity_type) {
  module_load_include('inc', 'farm_group', 'farm_group.base_fields');
  switch ($entity_type->id()) {

    // Build asset base fields.
    case 'asset':
      return farm_group_asset_base_fields();

    // Build log base fields.
    case 'log':
      return farm_group_log_base_fields();

    default:
      return [];
  }
}

/**
 * Implements hook_views_pre_build().
 */
function farm_group_views_pre_build(ViewExecutable $view) {

  // Only alter the farm_log page_related view.
  if ($view->id() != 'farm_log' || $view->current_display != 'page_related') {
    return;
  }

  // Bail if there is no asset_target_id argument.
  $arguments = $view->argument;
  if (empty($arguments['asset_target_id'])) {
    return;
  }

  // Use the asset_and_group validator.
  $asset_argument = $arguments['asset_target_id'];
  $asset_argument->options['validate']['type'] = 'asset_and_group';
}

/**
 * Implements hook_views_query_alter().
 */
function farm_group_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {

  // Bail if there is no asset_target_id argument.
  $arguments = $view->argument;
  if (empty($arguments['asset_target_id'])) {
    return;
  }

  // Check if the asset_and_group validator is used.
  $asset_argument = $arguments['asset_target_id'];
  $validator = $asset_argument->getPlugin('argument_validator');
  if (empty($validator) || $validator->getPluginId() != 'asset_and_group') {
    return;
  }

  // Get the asset id from the argument.
  $asset_id = $asset_argument->getValue();

  // Bail if empty.
  if (empty($asset_id)) {
    return;
  }

  /** @var \Drupal\asset\Entity\AssetInterface $asset */
  $asset = \Drupal::entityTypeManager()->getStorage('asset')->load($asset_id);
  /** @var \Drupal\farm_group\GroupMembershipInterface $group_service */
  $group_service = \Drupal::service('group.membership');

  // Include the group history logs in the query.
  $group_log_ids = array_map(function ($log) {
    return $log->id();
  }, array_values($group_service->getGroupHistoryLogs($asset)));

  /** @var \Drupal\views\Plugin\views\query\Sql $query */
  $query->setWhereGroup('OR', 0);
  $query->addWhere(0, 'log_field_data.id', $group_log_ids, 'IN');
}
